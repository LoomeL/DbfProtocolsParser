name: .NET

on:
  push:
    branches: 
     - '*'
  pull_request:
    branches: 
     - '*'

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      ARTIFACT_PATH: ./DbfProtocolsParser/bin/Debug/net8.0/win-x86/publish/DbfProtocolsParser.exe
      CERT_PATH: "./selfsigned_certificate.pfx"
      CERT_PASSWORD: "yourCertificatePassword"

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Publish
      run: dotnet publish --no-build -c Debug -a x86 -p:PublishSingleFile=true --self-contained=true

    - name:  Generate and Sign Artifact
      run: |
        openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 3650 -out cert.pem -subj "/CN=YourCompanyName"
        openssl pkcs12 -export -out $CERT_PATH -inkey key.pem -in cert.pem -passout pass:$CERT_PASSWORD
        openssl dgst -sha256 -sign $CERT_PATH -out ${{ env.ARTIFACT_PATH }}.signed ${{ env.ARTIFACT_PATH }}
        openssl dgst -sha256 -verify <(openssl x509 -in cert.pem -pubkey -noout) -signature ${{ env.ARTIFACT_PATH }}.signed
        rm -f key.pem cert.pem

      env:
        ARTIFACT_PATH: ${{ env.ARTIFACT_PATH }}
        CERT_PATH: ${{ env.CERT_PATH }}
        CERT_PASSWORD: ${{ env.CERT_PASSWORD }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: DbfProtocolsParser.exe
        path: ${{ env.ARTIFACT_PATH }}
